/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./ajax.js":
/*!*****************!*\
  !*** ./ajax.js ***!
  \*****************/
/*! exports provided: ajax */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ajax\", function() { return ajax; });\nconst _root = \"http://localhost:5000/\"\r\n\r\nfunction ajax(data) {\r\n\tconst xhttp = new XMLHttpRequest();\r\n\tif(!data.url.startsWith('http://') && !data.url.startsWith('https://')) {\r\n\t\tif(data.url.startsWith('/')) {\r\n\t\t\tdata.url = data.url.substring(1)\r\n\t\t}\r\n\t\tdata.url = _root + data.url\r\n\t}\r\n\txhttp.onreadystatechange = () => {\r\n\t\tif(xhttp.readyState == 4 && xhttp.status == 200) {\r\n\t\t\tif(data.callback) {\r\n\t\t\t\tdata.callback(xhttp.responseText);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tdata.method = data.method.toUpperCase();\r\n\tif(data.method == 'GET') {\r\n\t\tif(data.query) {\r\n\t\t\txhttp.open(\"GET\", data.url + \"?\" + data.query)\r\n\t\t} else {\r\n\t\t\txhttp.open(\"GET\", data.url)\r\n\t\t}\r\n\t\txhttp.send();\r\n\t} else if(data.method == 'POST') {\r\n\t\txhttp.open(\"POST\", data.url);\r\n\t\txhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n\t\tif(data.query) {\r\n\t\t\txhttp.send(data.query);\r\n\t\t} else {\r\n\t\t\txhttp.send()\r\n\t\t}\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./ajax.js?");

/***/ }),

/***/ "./camera.js":
/*!*******************!*\
  !*** ./camera.js ***!
  \*******************/
/*! exports provided: Camera */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Camera\", function() { return Camera; });\nclass Camera {\r\n\tconstructor(canvas, mapWidth, mapHeight, mouse) {\r\n\t\tthis.topLeft = {X: 0, Y: 0};\r\n\t\tthis.canvas = canvas;\r\n\t\tthis.width = canvas.width;\r\n\t\tthis.height = canvas.height;\r\n\t\tthis.mapWidth = mapWidth;\r\n\t\tthis.mapHeight = mapHeight;\r\n\t\tthis.mouse = mouse;\r\n\t\tthis.velocity = [0, 0];\r\n\t\tthis.speed = 10;\r\n\t\tthis.cameraXRef = document.getElementById('cameraX');\r\n\t\tthis.cameraYRef = document.getElementById('cameraY');\r\n\t\tthis.init();\r\n\t}\r\n\tinit() {\r\n\t\tdocument.addEventListener('keydown', (ev) => this.onKeyDown(ev));\r\n\t\tdocument.addEventListener('keyup', (ev) => this.onKeyUp(ev));\r\n\t}\r\n\tonKeyDown(ev) {\r\n\t\tif(ev.keyCode == 87) {\r\n\t\t\tthis.velocity[1] = -1;\r\n\t\t} else if(ev.keyCode == 83) {\r\n\t\t\tthis.velocity[1] = 1;\r\n\t\t} else if(ev.keyCode == 65) {\r\n\t\t\tthis.velocity[0] = -1;\r\n\t\t} else if(ev.keyCode == 68) {\r\n\t\t\tthis.velocity[0] = 1;\r\n\t\t}\r\n\t}\r\n\tonKeyUp(ev) {\r\n\t\tif(ev.keyCode == 87) {\r\n\t\t\tthis.velocity[1] = 0;\r\n\t\t} else if(ev.keyCode == 83) {\r\n\t\t\tthis.velocity[1] = 0;\r\n\t\t} else if(ev.keyCode == 65) {\r\n\t\t\tthis.velocity[0] = 0;\r\n\t\t} else if(ev.keyCode == 68) {\r\n\t\t\tthis.velocity[0] = 0;\r\n\t\t}\r\n\t}\r\n\tmoveAt(X, Y) {\r\n\t\tthis.topLeft = {X, Y};\r\n\t\tthis.assertValidPosition();\r\n\t}\r\n\tupdate() {\r\n\t\tlet X = parseInt(this.cameraXRef.value);\r\n\t\tlet Y = parseInt(this.cameraYRef.value);\r\n\t\tif(isNaN(X)) X = 0;\r\n\t\tif(isNaN(Y)) Y = 0;\r\n\t\tthis.topLeft.X = X + this.velocity[0] * this.speed;\r\n\t\tthis.topLeft.Y = Y + this.velocity[1] * this.speed;\r\n\t\tthis.assertValidPosition();\r\n\t\tthis.cameraXRef.value = this.topLeft.X;\r\n\t\tthis.cameraYRef.value = this.topLeft.Y;\r\n\t}\r\n\tassertValidPosition() {\r\n\t\tif(this.topLeft.X < 0) this.topLeft.X = 0;\r\n\t\telse if(this.topLeft.X + this.width > this.mapWidth) {\r\n\t\t\tthis.topLeft.X = this.mapWidth - this.width;\r\n\t\t}\r\n\t\tif(this.topLeft.Y < 0) this.topLeft.Y = 0;\r\n\t\telse if(this.topLeft.Y + this.height > this.mapHeight) {\r\n\t\t\tthis.topLeft.Y = this.mapHeight - this.height;\r\n\t\t}\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./camera.js?");

/***/ }),

/***/ "./main.js":
/*!*****************!*\
  !*** ./main.js ***!
  \*****************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _mouse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mouse */ \"./mouse.js\");\n/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./map */ \"./map.js\");\n/* harmony import */ var _sprite_manager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sprite-manager */ \"./sprite-manager.js\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./settings */ \"./settings.js\");\n/* harmony import */ var _camera__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./camera */ \"./camera.js\");\n/* harmony import */ var _ajax__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ajax */ \"./ajax.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst config = {\r\n\tcanvasWidth: 790,\r\n\tcanvasHeight: 575,\r\n\tmapWidth: 10000,\r\n\tmapHeight: 10000,\r\n\ttileSize: 32,\r\n\tsprites: [\r\n\t\t'terrain_atlas.png',\r\n\t\t'Castle2.png',\r\n\t\t'PathAndObjects.png',\r\n\t\t'mountain_landscape.png',\r\n\t\t'plants.png',\r\n\t\t'tree-variations.png'\r\n\t],\r\n\tspritesMargin: [0]\r\n}\r\n\r\nconst canvas = document.querySelector('canvas');\r\ncanvas.width = config.canvasWidth;\r\ncanvas.height = config.canvasHeight;\r\n\r\nconst mouse = new _mouse__WEBPACK_IMPORTED_MODULE_0__[\"Mouse\"]();\r\nconst settings = new _settings__WEBPACK_IMPORTED_MODULE_3__[\"Settings\"]();\r\nconst mapWidth = config.tileSize * parseInt(config.mapWidth / config.tileSize);\r\nconst mapHeight = config.tileSize * parseInt(config.mapHeight / config.tileSize);\r\nconst camera = new _camera__WEBPACK_IMPORTED_MODULE_4__[\"Camera\"](canvas, mapWidth, mapHeight, mouse);\r\n\r\n\r\n\r\nconst spriteManager = new _sprite_manager__WEBPACK_IMPORTED_MODULE_2__[\"SpriteManager\"](config.tileSize, settings);\r\n\r\nconst mapDependiecies = [\r\n\tcanvas,\r\n\tspriteManager,\r\n\tmouse,\r\n\tsettings,\r\n\tcamera,\r\n\t_ajax__WEBPACK_IMPORTED_MODULE_5__[\"ajax\"]\r\n];\r\n\r\nconst map = new _map__WEBPACK_IMPORTED_MODULE_1__[\"Map\"](config.mapWidth, config.mapHeight, config.tileSize, ...mapDependiecies);\r\n\r\nspriteManager.loadNewSprites(config.tileSize, config.sprites, config.spritesMargin);\r\n\r\n\r\nfunction animate(t = 0) {\r\n\trequestAnimationFrame(animate);\r\n\t\r\n\tcamera.update();\r\n\tmap.update();\r\n\tmap.render();\r\n}\r\nanimate();\n\n//# sourceURL=webpack:///./main.js?");

/***/ }),

/***/ "./map.js":
/*!****************!*\
  !*** ./map.js ***!
  \****************/
/*! exports provided: Map */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Map\", function() { return Map; });\nclass Map {\r\n\tconstructor(width, height, tileSize, canvas, spriteManager, mouse, settings, camera, ajax) {\r\n\t\tthis.tileSize = tileSize;\r\n\t\tthis.tiles = [];\r\n\t\tthis.numOfRows = parseInt(height / this.tileSize);\r\n\t\tthis.numOfCols = parseInt(width / this.tileSize);\r\n\t\tthis.width = tileSize * this.numOfCols;\r\n\t\tthis.height = tileSize * this.numOfRows;\r\n\t\tthis.canvas = canvas;\r\n\t\tthis.canvas.addEventListener('mousemove', () => this.onMousemove());\r\n\t\tthis.canvas.addEventListener('mouseup', (ev) => this.onMouseUp(ev))\r\n\t\tthis.ctx = this.canvas.getContext('2d');\r\n\t\tthis.rect = this.canvas.getBoundingClientRect();\r\n\t\tthis.rectOffsetY = window.scrollY;\r\n\t\tthis.spriteManager = spriteManager;\r\n\t\tthis.mouse = mouse;\r\n\t\tthis.settings = settings;\r\n\t\tthis.camera = camera;\r\n\t\tthis.ajax = ajax;\r\n\t\tthis.hoveredTiles = [];\r\n\t\tthis.mouseXRef = document.getElementById('mouseX');\r\n\t\tthis.mouseYRef = document.getElementById('mouseY');\r\n\t\tthis.undoHistory = [];\r\n\t\tthis.redoHistory = [];\r\n\t\tthis.maxHistoryLength = 5000;\r\n\t\tthis.init();\r\n\t}\r\n\tinit() {\r\n\t\tthis.reset();\r\n\t\tdocument.addEventListener('keydown', (ev) => {\r\n\t\t\tif(ev.keyCode == 90 && ev.ctrlKey == true) {\r\n\t\t\t\tthis.undo();\r\n\t\t\t} else if(ev.keyCode == 89 && ev.ctrlKey == true) {\r\n\t\t\t\tthis.redo();\r\n\t\t\t}\r\n\t\t});\r\n\t\tdocument.addEventListener('mousewheel', (ev) => {\r\n\t\t\tif(this.settings.rectSelection) return;\r\n\t\t\tif(this.mouse.isInRect(this.rect, this.rectOffsetY)) {\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t\tif(ev.deltaY < 0) {\r\n\t\t\t\t\tthis.settings.brushSizeV++;\r\n\t\t\t\t\tthis.settings.brushSizeH++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.settings.brushSizeV--;\r\n\t\t\t\t\tthis.settings.brushSizeH--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t});\r\n\t\tdocument.getElementById('reset').addEventListener('click', () => this.reset(true));\r\n\t\tdocument.getElementById('undo').addEventListener('click', () => this.undo());\r\n\t\tdocument.getElementById('redo').addEventListener('click', () => this.redo());\r\n\t\tdocument.getElementById('save').addEventListener('click', () => this.save());\r\n\t\tdocument.getElementById('load').addEventListener('click', () => this.load());\r\n\t\tdocument.getElementById('background').addEventListener('click', () => this.setBackground());\r\n\t}\r\n\r\n\treset(question = false) {\r\n\t\tif(question) {\r\n\t\t\tconst answer = confirm('Reseting map cannot be undone, are you sure you want to proceed?');\r\n\t\t\tif(!answer) return;\r\n\t\t}\r\n\t\tthis.tiles = [];\r\n\t\tfor(let i = 0; i < this.numOfRows; i++) {\r\n\t\t\tlet row = [];\r\n\t\t\tfor(let j = 0; j < this.numOfCols; j++) {\r\n\t\t\t\tlet layers = [];\r\n\t\t\t\tlayers.push([null, null, null, 1]);\r\n\t\t\t\trow.push(layers);\r\n\t\t\t}\r\n\t\t\tthis.tiles.push(row);\r\n\t\t}\r\n\t}\r\n\r\n\tundo() {\r\n\t\tif(this.undoHistory.length == 0) return;\r\n\t\tif(this.redoHistory.length > this.maxHistoryLength) {\r\n\t\t\tthis.redoHistory.pop();\r\n\t\t}\r\n\t\tconst move = this.undoHistory[0];\r\n\t\tconst i = move.i;\r\n\t\tconst j = move.j;\r\n\t\tswitch(move.action) {\r\n\t\t\tcase '0':\r\n\t\t\t\tthis.redoHistory.unshift({\r\n\t\t\t\t\taction: '0',\r\n\t\t\t\t\tID: this.tiles[i][j][0][3],\r\n\t\t\t\t\ti,\r\n\t\t\t\t\tj\r\n\t\t\t\t});\r\n\t\t\t\tthis.tiles[i][j][0][3] = move.ID;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '1':\r\n\t\t\t\tthis.redoHistory.unshift({\r\n\t\t\t\t\taction: '1',\r\n\t\t\t\t\tspriteIndex: this.tiles[i][j][move.layer][0],\r\n\t\t\t\t\tsX: this.tiles[i][j][move.layer][1],\r\n\t\t\t\t\tsY: this.tiles[i][j][move.layer][2],\r\n\t\t\t\t\tID: this.tiles[i][j][0][3],\r\n\t\t\t\t\tlayer: move.layer,\r\n\t\t\t\t\ti,\r\n\t\t\t\t\tj\r\n\t\t\t\t});\r\n\t\t\t\tthis.tiles[i][j][move.layer][0] = move.spriteIndex;\r\n\t\t\t\tthis.tiles[i][j][move.layer][1] = move.sX;\r\n\t\t\t\tthis.tiles[i][j][move.layer][2] = move.sY;\r\n\t\t\t\tthis.tiles[i][j][0][3] = move.ID;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '2':\r\n\t\t\t\tthis.redoHistory.unshift({\r\n\t\t\t\t\taction: '2',\r\n\t\t\t\t\tspriteIndex: this.tiles[i][j][0][0],\r\n\t\t\t\t\tsX: this.tiles[i][j][0][1],\r\n\t\t\t\t\tsY: this.tiles[i][j][0][2],\r\n\t\t\t\t\tID: this.tiles[i][j][0][3],\r\n\t\t\t\t\ti,\r\n\t\t\t\t\tj\r\n\t\t\t\t});\r\n\t\t\t\tthis.tiles[i][j][0][0] = null;\r\n\t\t\t\tthis.tiles[i][j][0][1] = null;\r\n\t\t\t\tthis.tiles[i][j][0][2] = null;\r\n\t\t\t\tthis.tiles[i][j][0][3] = 1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '3':\r\n\t\t\t\tthis.redoHistory.unshift({\r\n\t\t\t\t\taction: '3',\r\n\t\t\t\t\tlayer: this.tiles[i][j][this.tiles[i][j].length-1],\r\n\t\t\t\t\ti,\r\n\t\t\t\t\tj\r\n\t\t\t\t});\r\n\t\t\t\tthis.tiles[i][j].pop();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.undoHistory.shift();\r\n\t}\r\n\r\n\tredo() {\r\n\t\tif(this.redoHistory.length == 0) return;\r\n\t\tif(this.undoHistory.length > this.maxHistoryLength) {\r\n\t\t\tthis.undoHistory.pop();\r\n\t\t}\r\n\t\tconst move = this.redoHistory[0];\r\n\t\tconst i = move.i;\r\n\t\tconst j = move.j;\r\n\t\tswitch(move.action) {\r\n\t\t\tcase '0':\r\n\t\t\t\tthis.undoHistory.unshift({\r\n\t\t\t\t\taction: '0',\r\n\t\t\t\t\ti,\r\n\t\t\t\t\tj,\r\n\t\t\t\t\tID: this.tiles[i][j][0][3]\r\n\t\t\t\t});\r\n\t\t\t\tthis.tiles[i][j][0][3] = move.ID;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '1':\r\n\t\t\t\tthis.undoHistory.unshift({\r\n\t\t\t\t\taction: '1',\r\n\t\t\t\t\ti,\r\n\t\t\t\t\tj,\r\n\t\t\t\t\tlayer: move.layer,\r\n\t\t\t\t\tID: this.tiles[i][j][0][3],\r\n\t\t\t\t\tspriteIndex: this.tiles[i][j][move.layer][0],\r\n\t\t\t\t\tsX: this.tiles[i][j][move.layer][1],\r\n\t\t\t\t\tsY: this.tiles[i][j][move.layer][2]\r\n\t\t\t\t});\r\n\t\t\t\tthis.tiles[i][j][move.layer][0] = move.spriteIndex;\r\n\t\t\t\tthis.tiles[i][j][move.layer][1] = move.sX;\r\n\t\t\t\tthis.tiles[i][j][move.layer][2] = move.sY;\r\n\t\t\t\tthis.tiles[i][j][0][3] = move.ID;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '2':\r\n\t\t\t\tthis.undoHistory.unshift({\r\n\t\t\t\t\taction: '2',\r\n\t\t\t\t\ti,\r\n\t\t\t\t\tj\r\n\t\t\t\t});\r\n\t\t\t\tthis.tiles[i][j][0][0] = move.spriteIndex;\r\n\t\t\t\tthis.tiles[i][j][0][1] = move.sX;\r\n\t\t\t\tthis.tiles[i][j][0][2] = move.sY;\r\n\t\t\t\tthis.tiles[i][j][0][3] = move.ID;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '3':\r\n\t\t\t\tthis.undoHistory.unshift({\r\n\t\t\t\t\taction: '3',\r\n\t\t\t\t\ti,\r\n\t\t\t\t\tj\r\n\t\t\t\t})\r\n\t\t\t\tthis.tiles[i][j].push(move.layer);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.redoHistory.shift();\r\n\t}\r\n\r\n\tgetHoveredTile() {\r\n\t\tconst wp = this.getWorldMousePosition();\r\n\t\tconst ti = this.getTileIndexFromPosition(wp.X, wp.Y);\r\n\t\treturn ti;\r\n\t}\r\n\r\n\tgetWorldMousePosition() {\r\n\t\treturn {\r\n\t\t\tX: this.mouse.X - this.rect.left + this.camera.topLeft.X,\r\n\t\t\tY: this.mouse.Y - (this.rect.top + this.rectOffsetY) + this.camera.topLeft.Y\r\n\t\t};\r\n\t}\r\n\r\n\tgetTileIndexFromPosition(X, Y) {\r\n\t\treturn {\r\n\t\t\ti: Math.floor(Y / this.tileSize),\r\n\t\t\tj: Math.floor(X / this.tileSize)\r\n\t\t}\r\n\t}\r\n\r\n\tonMousemove() {\r\n\t\tif(!this.mouse.lmbDown) return;\r\n\t\tthis.edit();\r\n\t}\r\n\r\n\tonMouseUp(ev) {\r\n\t\tif(ev.button !== 0) return;\r\n\t\tthis.edit();\r\n\t}\r\n\r\n\tedit() {\r\n\t\tconst spriteIndex = this.spriteManager.activeSpriteIndex;\r\n\t\tconst sprite = this.spriteManager.activeSprite;\r\n\t\tfor(let k = 0; k < this.hoveredTiles.length; k++) {\r\n\t\t\tfor(let n = 0; n < this.hoveredTiles[k].length; n++) {\r\n\t\t\t\tconst i = this.hoveredTiles[k][n][0];\r\n\t\t\t\tconst j = this.hoveredTiles[k][n][1];\r\n\t\t\t\tif(this.settings.eraser) {\r\n\t\t\t\t\tthis.tiles[i][j] = [[null, null, null, 1]];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(!this.settings.rectSelection) {\r\n\t\t\t\t\t\tconst sX = sprite.selectedTilePosition[0];\r\n\t\t\t\t\t\tconst sY = sprite.selectedTilePosition[1];\r\n\t\t\t\t\t\tthis.editTile(i, j, spriteIndex, sX, sY);\r\n\t\t\t\t\t} else if(this.spriteManager.activeSprite.topLeft && this.spriteManager.activeSprite.bottomRight) {\r\n\t\t\t\t\t\tconst sX = sprite.selectedTilesPosition[k][n][0];\r\n\t\t\t\t\t\tconst sY = sprite.selectedTilesPosition[k][n][1];\r\n\t\t\t\t\t\tthis.editTile(i, j, spriteIndex, sX, sY);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetBackground() {\r\n\t\tconst spriteIndex = this.spriteManager.activeSpriteIndex;\r\n\t\tconst sprite = this.spriteManager.activeSprite;\r\n\t\tconst sX = sprite.selectedTilePosition[0];\r\n\t\tconst sY = sprite.selectedTilePosition[1];\r\n\t\tfor(let i = 0; i < this.tiles.length; i++) {\r\n\t\t\tfor(let j = 0; j < this.tiles[i].length; j++) {\r\n\t\t\t\tthis.tiles[i][j][0][3] = this.settings.tileID;\r\n\t\t\t\tthis.tiles[i][j][0][0] = spriteIndex;\r\n\t\t\t\tthis.tiles[i][j][0][1] = sX;\r\n\t\t\t\tthis.tiles[i][j][0][2] = sY;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\teditTile(i, j, spriteIndex, sX, sY) {\r\n\t\tif(i < 0 || j < 0 || i >= this.tiles.length || j >= this.tiles[0].length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(this.undoHistory.length > this.maxHistoryLength) {\r\n\t\t\tthis.undoHistory.pop();\r\n\t\t}\r\n\t\tconst previousID = this.tiles[i][j][0][3];\r\n\t\tif(previousID !== this.settings.tileID) {\r\n\t\t\tthis.tiles[i][j][0][3] = this.settings.tileID;\r\n\t\t\tif(this.settings.changeIDOnly) {\r\n\t\t\t\tthis.undoHistory.unshift({\r\n\t\t\t\t\taction: '0',\r\n\t\t\t\t\ti,\r\n\t\t\t\t\tj,\r\n\t\t\t\t\tID: previousID\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(this.settings.changeIDOnly) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst lastLayer = this.tiles[i][j].length - 1;\r\n\t\tif(!this.settings.newLayer) {\r\n\t\t\tif(this.tiles[i][j][lastLayer][0] === spriteIndex &&\r\n\t\t\t\tthis.tiles[i][j][lastLayer][1] === sX && this.tiles[i][j][lastLayer][2] === sY) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.undoHistory.unshift({\r\n\t\t\t\taction: '1',\r\n\t\t\t\ti,\r\n\t\t\t\tj,\r\n\t\t\t\tlayer: lastLayer,\r\n\t\t\t\tID: previousID,\r\n\t\t\t\tspriteIndex: this.tiles[i][j][lastLayer][0],\r\n\t\t\t\tsX: this.tiles[i][j][lastLayer][1],\r\n\t\t\t\tsY: this.tiles[i][j][lastLayer][2]\r\n\t\t\t});\r\n\t\t\tthis.tiles[i][j][lastLayer][0] = spriteIndex;\r\n\t\t\tthis.tiles[i][j][lastLayer][1] = sX;\r\n\t\t\tthis.tiles[i][j][lastLayer][2] = sY;\r\n\t\t} else {\r\n\t\t\tif(this.tiles[i][j][0][0] === null) {\r\n\t\t\t\tthis.undoHistory.unshift({\r\n\t\t\t\t\taction: '2',\r\n\t\t\t\t\ti,\r\n\t\t\t\t\tj\r\n\t\t\t\t});\r\n\t\t\t\tthis.tiles[i][j][0][0] = spriteIndex;\r\n\t\t\t\tthis.tiles[i][j][0][1] = sX;\r\n\t\t\t\tthis.tiles[i][j][0][2] = sY;\r\n\t\t\t} else {\r\n\t\t\t\tif(this.tiles[i][j][lastLayer][0] === spriteIndex && this.tiles[i][j][lastLayer][1] == sX &&\r\n\t\t\t\t\tthis.tiles[i][j][lastLayer][2] == sY) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.undoHistory.unshift({\r\n\t\t\t\t\taction: '3',\r\n\t\t\t\t\ti,\r\n\t\t\t\t\tj\r\n\t\t\t\t});\r\n\t\t\t\tconst newLayer = [spriteIndex, sX, sY];\r\n\t\t\t\tthis.tiles[i][j].push(newLayer);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tthis.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\t\tconst data = this.getVisibleMapPart();\r\n\t\tfor(let i = data.i; i < data.iMax; i++) {\r\n\t\t\tfor(let j = data.j; j < data.jMax; j++) {\r\n\t\t\t\tif(this.tiles[i][j][0][0] !== null) {\r\n\t\t\t\t\tthis.renderTile(i, j);\r\n\t\t\t\t}\r\n\t\t\t\tif(this.settings.showMatchingIDs && this.tiles[i][j][0][3] == this.settings.tileID) {\r\n\t\t\t\t\tthis.rectAroundTile(i, j, 'white', 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(this.mouse.isInRect(this.rect, this.rectOffsetY)) {\r\n\t\t\tthis.showHoveredTiles();\r\n\t\t\tthis.updateMouseInfo();\r\n\t\t}\r\n\t}\r\n\r\n\trenderTile(i, j) {\r\n\t\tconst layers = this.tiles[i][j];\r\n\t\tfor(let n = 0; n < layers.length; n++) {\r\n\t\t\tconst layer = layers[n];\r\n\t\t\tconst img = this.spriteManager.sprites[layer[0]].img;\r\n\t\t\tconst sX = layer[1];\r\n\t\t\tconst sY = layer[2];\r\n\t\t\tthis.ctx.drawImage(img, sX, sY, this.tileSize, this.tileSize,\r\n\t\t\t\t\t\t\t\tparseInt(j * this.tileSize - this.camera.topLeft.X), \r\n\t\t\t\t\t\t\t\tparseInt(i * this.tileSize - this.camera.topLeft.Y), \r\n\t\t\t\t\t\t\t\tthis.tileSize, this.tileSize);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tgetVisibleMapPart() {\r\n\t\tlet ti = this.getTileIndexFromPosition(this.camera.topLeft.X, this.camera.topLeft.Y);\r\n\t\tti.i-=3; ti.j-=3;\r\n\t\tif(ti.i < 0) ti.i = 0;\r\n\t\tif(ti.j < 0) ti.j = 0;\r\n\t\tlet iMax = ti.i + Math.floor(this.canvas.height / this.tileSize) + 6;\r\n\t\tlet jMax = ti.j + Math.floor(this.canvas.width  / this.tileSize) + 6;\r\n\t\tif(iMax > this.tiles.length) iMax = this.tiles.length;\r\n\t\tif(jMax > this.tiles[0].length) jMax = this.tiles[0].length;\r\n\t\treturn {\r\n\t\t\ti: ti.i,\r\n\t\t\tj: ti.j,\r\n\t\t\tiMax,\r\n\t\t\tjMax\r\n\t\t};\r\n\t}\r\n\r\n\tshowHoveredTiles() {\r\n\t\tfor(let k = 0; k < this.hoveredTiles.length; k++) {\r\n\t\t\tfor(let n = 0; n < this.hoveredTiles[0].length; n++) {\r\n\t\t\t\tconst j = this.hoveredTiles[k][n][1];\r\n\t\t\t\tconst i = this.hoveredTiles[k][n][0];\r\n\t\t\t\tthis.rectAroundTile(i, j, 'gray');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trectAroundTile(i, j, color = 'white', offset = 0) {\r\n\t\tthis.ctx.strokeStyle = color;\r\n\t\tthis.ctx.lineWidth = 2;\r\n\t\tthis.ctx.strokeRect(j * this.tileSize - this.camera.topLeft.X + offset, \r\n\t\t\t\t\t\t\ti * this.tileSize - this.camera.topLeft.Y + offset, \r\n\t\t\t\t\t\t\tthis.tileSize - 2 * offset, this.tileSize - 2 * offset);\r\n\t}\r\n\r\n\tupdateMouseInfo() {\r\n\t\tconst mousePos = this.getWorldMousePosition();\r\n\t\tthis.mouseXRef.value = parseInt(mousePos.X);\r\n\t\tthis.mouseYRef.value = parseInt(mousePos.Y);\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tconst tile = this.getHoveredTile();\r\n\t\tconst ci = tile.i;\r\n\t\tconst cj = tile.j;\r\n\t\tlet ht = [];\r\n\t\tconst i = ci - Math.floor(this.settings.brushSizeV / 2);\r\n\t\tconst j = cj - Math.floor(this.settings.brushSizeH / 2);\r\n\t\tfor(let k = 0; k < this.settings.brushSizeV; k++) {\r\n\t\t\tlet row = [];\r\n\t\t\tfor(let n = 0; n < this.settings.brushSizeH; n++) {\r\n\t\t\t\trow.push([i + k, j + n]);\r\n\t\t\t}\r\n\t\t\tht.push(row);\r\n\t\t}\r\n\t\tthis.hoveredTiles = ht;\r\n\t}\r\n\r\n\tsave() {\r\n\t\tconst ref = document.getElementById('mapSaveName');\r\n\t\tconst mapName = ref.value.trim();\r\n\t\tif(mapName.length == 0) {\r\n\t\t\talert('Enter map name');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tref.value = '';\r\n\t\tconst sprites = this.spriteManager.spriteSources;\r\n\t\tconst spritesMargin = this.spriteManager.spritesMargin;\r\n\t\tconst tiles = this.tiles;\r\n\t\tconst mapData = {\r\n\t\t\twidth: this.width,\r\n\t\t\theight: this.height,\r\n\t\t\tnumOfCols: this.numOfCols,\r\n\t\t\tnumOfRows: this.numOfRows,\r\n\t\t\ttileSize: this.tileSize,\r\n\t\t\tsprites,\r\n\t\t\tspritesMargin,\r\n\t\t\ttiles\r\n\t\t};\r\n\t\tconst query = 'map_name=' + mapName + '&map_data=' + JSON.stringify(mapData);\r\n\t\tthis.ajax({\r\n\t\t\turl: 'admin/save-map',\r\n\t\t\tquery, \r\n\t\t\tmethod: \"post\"\r\n\t\t});\r\n\t}\r\n\r\n\tload() {\r\n\t\tconst ref = document.getElementById('mapLoadName')\r\n\t\tconst mapName = ref.value.trim()\r\n\t\tconst callback = (res) => {\r\n\t\t\tif(res == '0') {\r\n\t\t\t\talert('Map not found');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tref.value = '';\r\n\t\t\tconst mapData = JSON.parse(res);\r\n\t\t\tconsole.log(mapData);\r\n\t\t\tthis.spriteManager.loadNewSprites(mapData.tileSize, mapData.sprites, mapData.spritesMargin);\r\n\t\t\tthis.width = mapData.width;\r\n\t\t\tthis.height = mapData.height;\r\n\t\t\tthis.camera.mapWidth = this.width;\r\n\t\t\tthis.camera.mapHeight = this.height;\r\n\t\t\tthis.camera.topLeft = {X: 0, Y: 0};\r\n\t\t\tthis.numOfRows = mapData.numOfRows;\r\n\t\t\tthis.numOfCols = mapData.numOfCols;\r\n\t\t\tthis.tiles = mapData.tiles;\r\n\t\t\tthis.tileSize = mapData.tileSize;\r\n\t\t}\r\n\t\tthis.ajax({\r\n\t\t\turl: 'admin/load-map',\r\n\t\t\tquery: 'map_name=' + mapName,\r\n\t\t\tmethod: 'post', \r\n\t\t\tcallback\r\n\t\t});\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./map.js?");

/***/ }),

/***/ "./mouse.js":
/*!******************!*\
  !*** ./mouse.js ***!
  \******************/
/*! exports provided: Mouse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Mouse\", function() { return Mouse; });\nclass Mouse {\r\n\tconstructor() {\r\n\t\tthis.X = 0;\r\n\t\tthis.Y = 0;\r\n\t\tthis.lmbDown = false;\r\n\t\tthis.rmbDown = false;\r\n\t\tthis.initializeListeners();\r\n\t}\r\n\tinitializeListeners() {\r\n\t\tdocument.addEventListener('mousemove', (ev) => {\r\n\t\t\tthis.X = ev.pageX;\r\n\t\t\tthis.Y = ev.pageY; \r\n\t\t});\r\n\t\tdocument.addEventListener('mousedown', (ev) => {\r\n\t\t\tif(ev.button === 0) this.lmbDown = true;\r\n\t\t\telse if(ev.button === 2) this.rmbDown = true;\r\n\t\t});\r\n\t\tdocument.addEventListener('mouseup', (ev) => {\r\n\t\t\tif(ev.button === 0) this.lmbDown = false;\r\n\t\t\telse if(ev.button === 2) this.rmbDown = false;\r\n\t\t});\r\n\t}\r\n\tisInRect(rect, offsetY) {\r\n\t\treturn (this.X > rect.left && this.X < rect.right &&\r\n\t\t\t    this.Y > rect.top + offsetY && this.Y < rect.bottom + offsetY);\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./mouse.js?");

/***/ }),

/***/ "./settings.js":
/*!*********************!*\
  !*** ./settings.js ***!
  \*********************/
/*! exports provided: Settings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Settings\", function() { return Settings; });\nclass Settings {\r\n\tconstructor() {\r\n\t\tthis._brushSizeV = 1;\r\n\t\tthis.brushSizeVRef = document.getElementById('brushSizeV');\r\n\t\tthis._brushSizeH = 1;\r\n\t\tthis.brushSizeHRef = document.getElementById('brushSizeH');\r\n\t\tthis.defBrushSize = [1, 1];\r\n\t\tthis._newLayer = false;\r\n\t\tthis.newLayerRef = document.getElementById('newLayer');\r\n\t\tthis.rectSelection = false;\r\n\t\tthis.tileID = 1;\r\n\t\tthis.changeIDOnly = false;\r\n\t\tthis.changeIDOnlyRef = document.getElementById('changeIDOnly');\r\n\t\tthis.showMatchingIDs = false;\r\n\t\tthis.showMatchingIDsRef = document.getElementById('showMatchingIDs');\r\n\t\tthis.eraser = false;\r\n\t\tthis.eraserRef = document.getElementById('eraser');\r\n\t\tthis.initializeEventListeners();\r\n\t}\r\n\tget brushSizeH() {\r\n\t\treturn this._brushSizeH;\r\n\t}\r\n\tget brushSizeV() {\r\n\t\treturn this._brushSizeV;\r\n\t}\r\n\tset brushSizeH(val) {\r\n\t\tif(val < 1) val = 1;\r\n\t\tthis._brushSizeH = val;\r\n\t\tthis.brushSizeHRef.value = val;\r\n\t}\r\n\tset brushSizeV(val) {\r\n\t\tif(val < 1) val = 1;\r\n\t\tthis._brushSizeV = val;\r\n\t\tthis.brushSizeVRef.value = val;\r\n\t}\r\n\tset newLayer(val) {\r\n\t\tthis._newLayer = val;\r\n\t\tthis.newLayerRef.checked = val;\r\n\t}\r\n\tget newLayer() {\r\n\t\treturn this._newLayer;\r\n\t}\r\n\tinitializeEventListeners() {\r\n\t\tthis.eraserRef.addEventListener('change', (ev) => {\r\n\t\t\tthis.eraser = ev.target.checked;\r\n\t\t})\r\n\t\tthis.showMatchingIDsRef.addEventListener('change', (ev) => {\r\n\t\t\tthis.showMatchingIDs = ev.target.checked;\r\n\t\t})\r\n\t\tthis.changeIDOnlyRef.addEventListener('change', (ev) => {\r\n\t\t\tthis.changeIDOnly = ev.target.checked;\r\n\t\t})\r\n\t\tthis.newLayerRef.addEventListener('change', (ev) => {\r\n\t\t\tthis._newLayer = ev.target.checked;\r\n\t\t});\r\n\t\tthis.brushSizeHRef.addEventListener('change', (ev) => {\r\n\t\t\tlet value = parseInt(ev.target.value);\r\n\t\t\tif(isNaN(value)) value = 1;\r\n\t\t\tif(value < 1) value = 1;\r\n\t\t\tthis._brushSizeH = value;\r\n\t\t\tthis.defBrushSize[0] = value;\r\n\t\t});\r\n\t\tthis.brushSizeVRef.addEventListener('change', (ev) => {\r\n\t\t\tlet value = parseInt(ev.target.value);\r\n\t\t\tif(isNaN(value)) value = 1;\r\n\t\t\tif(value < 1) value = 1;\r\n\t\t\tthis._brushSizeV = value;\r\n\t\t\tthis.defBrushSize[1] = value;\r\n\t\t});\r\n\t\tdocument.getElementById('rectSelection').addEventListener('change', (ev) => {\r\n\t\t\tthis.removeSelectedTilesStyle();\r\n\t\t\tif(ev.target.checked) {\r\n\t\t\t\tthis.rectSelection = true;\r\n\t\t\t\tthis.brushSizeVRef.disabled = true;\r\n\t\t\t\tthis.brushSizeHRef.disabled = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.rectSelection = false;\r\n\t\t\t\tthis.brushSizeH = this.defBrushSize[0];\r\n\t\t\t\tthis.brushSizeV = this.defBrushSize[1];\r\n\t\t\t\tthis.brushSizeVRef.disabled = false;\r\n\t\t\t\tthis.brushSizeHRef.disabled = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\tdocument.getElementById('tileID').addEventListener('change', (ev) => {\r\n\t\t\tconst value = parseInt(ev.target.value);\r\n\t\t\tif(value < 1) value = 1;\r\n\t\t\tthis.tileID = value;\r\n\t\t});\r\n\t}\r\n\tremoveSelectedTilesStyle() {\r\n\t\tconst sp = document.getElementsByClassName('selected-piece');\r\n\t\tfor(let i = 0; i < sp.length; i++) {\r\n\t\t\tsp[i].classList.remove('selected-piece');\r\n\t\t\ti--;\r\n\t\t}\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./settings.js?");

/***/ }),

/***/ "./sprite-manager.js":
/*!***************************!*\
  !*** ./sprite-manager.js ***!
  \***************************/
/*! exports provided: SpriteManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SpriteManager\", function() { return SpriteManager; });\n/* harmony import */ var _sprite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sprite */ \"./sprite.js\");\n\r\n\r\nclass SpriteManager {\r\n\tconstructor(tileSize, settings) {\r\n\t\tthis.sprites = [];\r\n\t\tthis.spriteSources = [];\r\n\t\tthis.spritesMargin = [];\r\n\t\tthis.activeSpriteIndex = 0;\r\n\t\tthis.activeSprite = null;\r\n\t\tthis.settings = settings;\r\n\t\tthis.tileSize = tileSize;\r\n\t\tthis.selectRef = document.getElementById('sprites');\r\n\t\tthis.selectRef.addEventListener('change', (ev) => {\r\n\t\t\tthis.activeSprite.container.style.display = 'none';\r\n\t\t\tthis.activeSpriteIndex = parseInt(ev.target.value);\r\n\t\t\tthis.activeSprite = this.sprites[this.activeSpriteIndex];\r\n\t\t\tthis.activeSprite.container.style.display = 'block';\r\n\t\t});\r\n\t}\r\n\tadd(imgSrc, margin = 0) {\r\n\t\tconst sprite = new _sprite__WEBPACK_IMPORTED_MODULE_0__[\"Sprite\"](imgSrc, this.tileSize, margin, this.settings);\r\n\t\tthis.sprites.push(sprite);\r\n\t\tthis.spriteSources.push(imgSrc);\r\n\t\tthis.spritesMargin.push(margin);\r\n\t\tthis.activeSpriteIndex = this.sprites.length - 1;\r\n\t\tif(this.activeSprite) {\r\n\t\t\tthis.activeSprite.container.style.display = 'none';\r\n\t\t}\r\n\t\tthis.activeSprite = sprite;\r\n\t\tthis.activeSprite.container.style.display = 'block';\r\n\t\tconst option = document.createElement('option');\r\n\t\toption.setAttribute('value', this.activeSpriteIndex);\r\n\t\toption.innerText = imgSrc.replace('.png', '');\r\n\t\tthis.selectRef.appendChild(option);\r\n\t\tthis.selectRef.value = this.activeSpriteIndex;\r\n\t}\r\n\tclear() {\r\n\t\tthis.sprites = [];\r\n\t\tthis.spriteSources = [];\r\n\t\tthis.spritesMargin = [];\r\n\t\tthis.activeSpriteIndex = 0;\r\n\t\tthis.activeSprite = null;\r\n\t\tthis.selectRef.innerHTML = '';\r\n\t\tdocument.getElementById('spritesContainer').innerHTML = '';\r\n\t}\r\n\tloadNewSprites(tileSize, sources, margins) {\r\n\t\tthis.clear();\r\n\t\tthis.tileSize = tileSize;\r\n\t\tfor(let i = 0; i < sources.length; i++) {\r\n\t\t\tthis.add(sources[i], margins[i]);\r\n\t\t}\r\n\t}\r\n\r\n}\n\n//# sourceURL=webpack:///./sprite-manager.js?");

/***/ }),

/***/ "./sprite.js":
/*!*******************!*\
  !*** ./sprite.js ***!
  \*******************/
/*! exports provided: Sprite */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Sprite\", function() { return Sprite; });\nclass Sprite {\r\n\tconstructor(imgSrc, tileSize, margin = 0, settings) {\r\n\t\tthis.img = new Image();\r\n\t\t// this.src = imgSrc;\r\n\t\tthis.img.src = '/client/assets/images/' + imgSrc;\t\t\r\n\t\tthis.img.onload = () => {\r\n\t\t\tthis.width = this.img.width;\r\n\t\t\tthis.height = this.img.height;\r\n\t\t\tthis.init();\t\t\t\r\n\t\t}\r\n\t\tthis.tileSize = tileSize;\r\n\t\tthis.selectedTilePosition = [null, null];\r\n\t\tthis.margin = margin;\r\n\t\tthis.settings = settings;\r\n\t\tthis.topLeft = null;\r\n\t\tthis.bottomRight = null;\r\n\t\tthis.selectedTilesPosition = null;\r\n\t\tthis.container = document.createElement('div');\r\n\t}\r\n\tinit() {\r\n\t\tthis.container.classList.add('clearfix');\r\n\t\tthis.container.classList.add('spriteContainer');\r\n\t\tconst numOfRows = (this.height + this.margin) / (this.tileSize + this.margin);\r\n\t\tconst numOfCols = (this.width + this.margin) / (this.tileSize + this.margin);\r\n\t\tconst margin = 0; // 2x the margin in css\r\n\t\tthis.container.style.width = (this.width - this.margin * (numOfCols - 1) + (numOfCols) * margin)+ 'px';\r\n\t\tfor(let i = 0; i < numOfRows; i++) {\r\n\t\t\tfor(let j = 0; j < numOfCols; j++) {\r\n\t\t\t\tconst piece = document.createElement('div');\r\n\t\t\t\tthis.setPieceEventListener(piece, i, j);\r\n\t\t\t\tthis.setPieceStyle(piece, i, j);\r\n\t\t\t\tthis.container.appendChild(piece);\r\n\t\t\t}\r\n\t\t}\r\n\t\tdocument.getElementById('spritesContainer').appendChild(this.container);\r\n\t}\r\n\tsetPieceEventListener(piece, i, j) {\r\n\t\tconst sX = j * this.tileSize + j * this.margin;\r\n\t\tconst sY = i * this.tileSize + i * this.margin;\r\n\t\tpiece.addEventListener('click', () => {\r\n\t\t\tdocument.getElementById('tileX').value = sX;\r\n\t\t\tdocument.getElementById('tileY').value = sY;\r\n\t\t\tif(this.settings.rectSelection) {\r\n\t\t\t\tif(this.topLeft) {\r\n\t\t\t\t\tif(this.bottomRight) {\r\n\t\t\t\t\t\tthis.bottomRight = null;\r\n\t\t\t\t\t\tthis.topLeft = [\r\n\t\t\t\t\t\t\tsX, \r\n\t\t\t\t\t\t\tsY\r\n\t\t\t\t\t\t];\r\n\t\t\t\t\t\tthis.removeSelectedStyles();\r\n\t\t\t\t\t\tpiece.classList.add('selected-piece');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.bottomRight = [sX, sY];\r\n\t\t\t\t\t\tif(this.topLeft[0] > this.bottomRight[0] || this.topLeft[1] > this.bottomRight[1]) {\r\n\t\t\t\t\t\t\tlet tmp = this.topLeft;\r\n\t\t\t\t\t\t\tthis.topLeft = this.bottomRight;\r\n\t\t\t\t\t\t\tthis.bottomRight = tmp;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpiece.classList.add('selected-piece');\r\n\t\t\t\t\t\tthis.updateSelectedTilesPosition();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.topLeft = [sX, sY];\r\n\t\t\t\t\tthis.removeSelectedStyles();\r\n\t\t\t\t\tpiece.classList.add('selected-piece');\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.selectedTilePosition = [sX, sY];\r\n\t\t\t\tthis.removeSelectedStyles();\r\n\t\t\t\tpiece.classList.add('selected-piece');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tremoveSelectedStyles() {\r\n\t\tconst sp = document.getElementsByClassName('selected-piece');\r\n\t\tfor(let i = 0; i < sp.length; i++) {\r\n\t\t\tsp[i].classList.remove('selected-piece');\r\n\t\t\ti--;\r\n\t\t}\r\n\t}\r\n\tsetPieceStyle(piece, i, j) {\r\n\t\tpiece.classList.add('piece');\r\n\t\tpiece.style.width = this.tileSize + 'px';\r\n\t\tpiece.style.height = this.tileSize + 'px';\r\n\t\tpiece.style.backgroundImage = 'url(' + this.img.src + ')';\r\n\t\tpiece.style.backgroundPosition = (-j * this.tileSize - this.margin * j) + 'px ' + \r\n\t\t\t\t\t\t\t\t\t\t (-i * this.tileSize - this.margin * i) + 'px';\r\n\t}\r\n\tupdateSelectedTilesPosition() {\r\n\t\tthis.selectedTilesPosition = [];\r\n\t\tfor(let sY = this.topLeft[1]; sY <= this.bottomRight[1]; sY += this.tileSize + this.margin) {\r\n\t\t\tlet row = [];\r\n\t\t\tfor(let sX = this.topLeft[0]; sX <= this.bottomRight[0]; sX += this.tileSize + this.margin) {\r\n\t\t\t\trow.push([sX, sY]);\r\n\t\t\t}\r\n\t\t\tthis.selectedTilesPosition.push(row);\r\n\t\t}\r\n\t\tconst hDiff = this.bottomRight[0] - this.topLeft[0];\r\n\t\tconst vDiff = this.bottomRight[1] - this.topLeft[1];\r\n\t\tlet hMargin = 0;\r\n\t\tif(hDiff > 0) hMargin = this.margin;\r\n\t\tlet vMargin = 0;\r\n\t\tif(vDiff > 0) vMargin = this.margin;\r\n\t\tthis.settings.brushSizeH = (hDiff) / (this.tileSize + hMargin) + 1;\r\n\t\tthis.settings.brushSizeV = (vDiff) / (this.tileSize + vMargin) + 1;\r\n\t}\t\r\n}\n\n//# sourceURL=webpack:///./sprite.js?");

/***/ })

/******/ });